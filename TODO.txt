Version 2.1
- Replace my Graphite UDP code with a network framework code (Most likely TCP for the time being) - done
- Write FakeCarbon client so you can test without a graphite install - done
- Change IP from 1.1.1.1 to 1_1_1_1 - sense & configure via flags - done
    -> Modified to change everything in the hostname from . to _, since you'd never really want that (I don't think)
- Change host.example.com to host_example_com - done

Version 2.2+
- Handle the 20 second internal statistics better
    - Allow user to configure polling period - could be 1 or 5 minutes or whatever that's divisible / 20
    - The user can configure the # of intervals to gather per polling period. So, you could configure to loop every 5
        minutes with 15 20-second intervals (if you wanted to)
    - Have the option to send raw the raw stats to graphite or average/mean the data
- Write code to compare stats coming out of vmstats and stats coming into FakeCarbon
- Get the parent information for a VM - so it becomes vmstats.CLUSTER.vmname.stat...
- A better/new manager thread that will help with exception handling & keep track of various stats
    -> this will be done using InterruptedException
    -> When an exception happens, the threads will be restarted instead of the entire app exiting (at least for
    most exceptions)
- Figure out how to mock up the VMware web services so tests can run without an actual vCenter/ESX node
- With mock services, write unit tests
- Add back in sending to Graphite via UDP
- Add in sending to Graphite via AMQP
- Filter VM names better, so if someone has host*name(noreallytheotherone)&thathostname as a vm name, stats get sent.
- Carbon File Management
    - Some sort of tool to manage the carbon files so that as some of these things get renamed, the data can be managed
        in better ways
    - Remove VM's that haven't been seen for X time
- Make a shell script to manage the startup to make the supervisord/upgrade process simple
